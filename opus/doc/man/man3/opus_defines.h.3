.TH "opus_defines.h" 3 "Thu Jan 12 2017" "Version 1.1.3" "Opus" \" -*- nroff -*-
.ad l
.nh
.SH NAME
opus_defines.h \- Opus reference implementation constants\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'opus_types\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBOPUS_OK\fP"
.br
.RI "\fINo error\&. \fP"
.ti -1c
.RI "#define \fBOPUS_BAD_ARG\fP"
.br
.RI "\fIOne or more invalid/out of range arguments\&. \fP"
.ti -1c
.RI "#define \fBOPUS_BUFFER_TOO_SMALL\fP"
.br
.RI "\fINot enough bytes allocated in the buffer\&. \fP"
.ti -1c
.RI "#define \fBOPUS_INTERNAL_ERROR\fP"
.br
.RI "\fIAn internal error was detected\&. \fP"
.ti -1c
.RI "#define \fBOPUS_INVALID_PACKET\fP"
.br
.RI "\fIThe compressed data passed is corrupted\&. \fP"
.ti -1c
.RI "#define \fBOPUS_UNIMPLEMENTED\fP"
.br
.RI "\fIInvalid/unsupported request number\&. \fP"
.ti -1c
.RI "#define \fBOPUS_INVALID_STATE\fP"
.br
.RI "\fIAn encoder or decoder structure is invalid or already freed\&. \fP"
.ti -1c
.RI "#define \fBOPUS_ALLOC_FAIL\fP"
.br
.RI "\fIMemory allocation has failed\&. \fP"
.ti -1c
.RI "#define \fBOPUS_AUTO\fP"
.br
.RI "\fIAuto/default setting\&. \fP"
.ti -1c
.RI "#define \fBOPUS_BITRATE_MAX\fP"
.br
.RI "\fIMaximum bitrate\&. \fP"
.ti -1c
.RI "#define \fBOPUS_APPLICATION_VOIP\fP"
.br
.RI "\fIBest for most VoIP/videoconference applications where listening quality and intelligibility matter most\&. \fP"
.ti -1c
.RI "#define \fBOPUS_APPLICATION_AUDIO\fP"
.br
.RI "\fIBest for broadcast/high-fidelity application where the decoded audio should be as close as possible to the input\&. \fP"
.ti -1c
.RI "#define \fBOPUS_APPLICATION_RESTRICTED_LOWDELAY\fP"
.br
.RI "\fIOnly use when lowest-achievable latency is what matters most\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SIGNAL_VOICE\fP   3001"
.br
.RI "\fISignal being encoded is voice\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SIGNAL_MUSIC\fP   3002"
.br
.RI "\fISignal being encoded is music\&. \fP"
.ti -1c
.RI "#define \fBOPUS_BANDWIDTH_NARROWBAND\fP"
.br
.RI "\fI4 kHz bandpass \fP"
.ti -1c
.RI "#define \fBOPUS_BANDWIDTH_MEDIUMBAND\fP"
.br
.RI "\fI6 kHz bandpass \fP"
.ti -1c
.RI "#define \fBOPUS_BANDWIDTH_WIDEBAND\fP"
.br
.RI "\fI8 kHz bandpass \fP"
.ti -1c
.RI "#define \fBOPUS_BANDWIDTH_SUPERWIDEBAND\fP"
.br
.RI "\fI12 kHz bandpass \fP"
.ti -1c
.RI "#define \fBOPUS_BANDWIDTH_FULLBAND\fP"
.br
.RI "\fI20 kHz bandpass \fP"
.ti -1c
.RI "#define \fBOPUS_FRAMESIZE_ARG\fP   5000"
.br
.RI "\fISelect frame size from the argument (default) \fP"
.ti -1c
.RI "#define \fBOPUS_FRAMESIZE_2_5_MS\fP   5001"
.br
.RI "\fIUse 2\&.5 ms frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_FRAMESIZE_5_MS\fP   5002"
.br
.RI "\fIUse 5 ms frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_FRAMESIZE_10_MS\fP   5003"
.br
.RI "\fIUse 10 ms frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_FRAMESIZE_20_MS\fP   5004"
.br
.RI "\fIUse 20 ms frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_FRAMESIZE_40_MS\fP   5005"
.br
.RI "\fIUse 40 ms frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_FRAMESIZE_60_MS\fP   5006"
.br
.RI "\fIUse 60 ms frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_COMPLEXITY\fP(x)"
.br
.RI "\fIConfigures the encoder's computational complexity\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_COMPLEXITY\fP(x)"
.br
.RI "\fIGets the encoder's complexity configuration\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_BITRATE\fP(x)"
.br
.RI "\fIConfigures the bitrate in the encoder\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_BITRATE\fP(x)"
.br
.RI "\fIGets the encoder's bitrate configuration\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_VBR\fP(x)"
.br
.RI "\fIEnables or disables variable bitrate (VBR) in the encoder\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_VBR\fP(x)"
.br
.RI "\fIDetermine if variable bitrate (VBR) is enabled in the encoder\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_VBR_CONSTRAINT\fP(x)"
.br
.RI "\fIEnables or disables constrained VBR in the encoder\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_VBR_CONSTRAINT\fP(x)"
.br
.RI "\fIDetermine if constrained VBR is enabled in the encoder\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_FORCE_CHANNELS\fP(x)"
.br
.RI "\fIConfigures mono/stereo forcing in the encoder\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_FORCE_CHANNELS\fP(x)"
.br
.RI "\fIGets the encoder's forced channel configuration\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_MAX_BANDWIDTH\fP(x)"
.br
.RI "\fIConfigures the maximum bandpass that the encoder will select automatically\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_MAX_BANDWIDTH\fP(x)"
.br
.RI "\fIGets the encoder's configured maximum allowed bandpass\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_BANDWIDTH\fP(x)"
.br
.RI "\fISets the encoder's bandpass to a specific value\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_SIGNAL\fP(x)"
.br
.RI "\fIConfigures the type of signal being encoded\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_SIGNAL\fP(x)"
.br
.RI "\fIGets the encoder's configured signal type\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_APPLICATION\fP(x)"
.br
.RI "\fIConfigures the encoder's intended application\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_APPLICATION\fP(x)"
.br
.RI "\fIGets the encoder's configured application\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_LOOKAHEAD\fP(x)"
.br
.RI "\fIGets the total samples of delay added by the entire codec\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_INBAND_FEC\fP(x)"
.br
.RI "\fIConfigures the encoder's use of inband forward error correction (FEC)\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_INBAND_FEC\fP(x)"
.br
.RI "\fIGets encoder's configured use of inband forward error correction\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_PACKET_LOSS_PERC\fP(x)"
.br
.RI "\fIConfigures the encoder's expected packet loss percentage\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_PACKET_LOSS_PERC\fP(x)"
.br
.RI "\fIGets the encoder's configured packet loss percentage\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_DTX\fP(x)"
.br
.RI "\fIConfigures the encoder's use of discontinuous transmission (DTX)\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_DTX\fP(x)"
.br
.RI "\fIGets encoder's configured use of discontinuous transmission\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_LSB_DEPTH\fP(x)"
.br
.RI "\fIConfigures the depth of signal being encoded\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_LSB_DEPTH\fP(x)"
.br
.RI "\fIGets the encoder's configured signal depth\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_EXPERT_FRAME_DURATION\fP(x)"
.br
.RI "\fIConfigures the encoder's use of variable duration frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_EXPERT_FRAME_DURATION\fP(x)"
.br
.RI "\fIGets the encoder's configured use of variable duration frames\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_PREDICTION_DISABLED\fP(x)"
.br
.RI "\fIIf set to 1, disables almost all use of prediction, making frames almost completely independent\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_PREDICTION_DISABLED\fP(x)"
.br
.RI "\fIGets the encoder's configured prediction status\&. \fP"
.ti -1c
.RI "#define \fBOPUS_RESET_STATE\fP"
.br
.RI "\fIResets the codec state to be equivalent to a freshly initialized state\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_FINAL_RANGE\fP(x)"
.br
.RI "\fIGets the final state of the codec's entropy coder\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_BANDWIDTH\fP(x)"
.br
.RI "\fIGets the encoder's configured bandpass or the decoder's last bandpass\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_SAMPLE_RATE\fP(x)"
.br
.RI "\fIGets the sampling rate the encoder or decoder was initialized with\&. \fP"
.ti -1c
.RI "#define \fBOPUS_SET_GAIN\fP(x)"
.br
.RI "\fIConfigures decoder gain adjustment\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_GAIN\fP(x)"
.br
.RI "\fIGets the decoder's configured gain adjustment\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_LAST_PACKET_DURATION\fP(x)"
.br
.RI "\fIGets the duration (in samples) of the last packet successfully decoded or concealed\&. \fP"
.ti -1c
.RI "#define \fBOPUS_GET_PITCH\fP(x)"
.br
.RI "\fIGets the pitch of the last decoded frame, if available\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "const char * \fBopus_strerror\fP (int error)"
.br
.RI "\fIConverts an opus error code into a human readable string\&. \fP"
.ti -1c
.RI "const char * \fBopus_get_version_string\fP (void)"
.br
.RI "\fIGets the libopus version string\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Opus reference implementation constants\&. 


.SH "Author"
.PP 
Generated automatically by Doxygen for Opus from the source code\&.
